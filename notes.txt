Prompt:
You are a data analyst. You will be provided with a json file. The Json file has a table with column identifiers as "Date of Service", "Start Time", "End Time" '
the first column is a date column with dates in the MM/DD/YYYY format and the other two columns '
are time in 12-hour formats. The data is captured via OCR which means that there could be '
mistakes in how the OCR converts the handwritten text. Correct the data in the first column and make '
sure that the resulting date follows the MM/DD/YYYY format. If there are errors in '
the second and third column, correct them by making sure that they follow the 12-hour time format. '
Check the other rows to infer what dates and times should be written based on what was detected and the data in the other rows. '
if there are any cells in the second or third column with nan, remove the whole row.  '
please return a python dataframe with just the columns "Service Date", "Start Time", "End Time". Create a fourth column with header "Service Auth" and enter the Service Authorization number in all the rows.'
Just reply with the corrected python dataframe and nothing else.'


Useful FastHTML templates
PDF Embed - https://gallery.fastht.ml/widgets/pdf/display
CSV Uploader - https://gallery.fastht.ml/start_simple/csv_editor/app/
Inline Field Validation - https://gallery.fastht.ml/dynamic_user_interface/inline_validation/display
Progress Bar - https://gallery.fastht.ml/widgets/progress_bar/display



df-to-db
import pandas as pd
from sqlalchemy import create_engine
from io import StringIO

# Assume we have the CSV content in a string
csv_content = """Service Date,Start Time,End Time,Service Auth
09/09/2024,9:17 AM,10:17 AM,12510932
09/09/2024,10:18 AM,11:18 AM,12510932
09/10/2024,9:15 AM,10:15 AM,12510932
09/10/2024,10:16 AM,11:16 AM,12510932
09/11/2024,9:15 AM,10:15 AM,12510932
09/11/2024,10:16 AM,11:16 AM,12510932
09/12/2024,9:10 AM,10:10 AM,12510932
09/12/2024,10:11 AM,11:11 AM,12510932
09/13/2024,9:10 AM,10:15 AM,12510932
09/13/2024,10:11 AM,11:11 AM,12510932"""

# Convert CSV string to DataFrame
df = pd.read_csv(StringIO(csv_content))

# Create a database engine
# Replace 'sqlite:///your_database.db' with your actual database connection string
engine = create_engine('sqlite:///your_database.db')

# Insert the DataFrame into the database
df.to_sql('your_table_name', engine, if_exists='append', index=False)

Roadmap
Use proper database
Upload pdf -> Convert -> Queue for billing
Once all pdf's are queued, go to queue
Select all entries that you want to bill, there will be a table with checkboxes for selection.
download the file
(long term- interface this with EI-Hub entry directly)


    columns = list(db[sess['id']].columns_dict.keys())      # ignore first and last column
    header = Tr(*map(Th, columns[1:-1]))                    # ignore first and last column

Fix Tables extraction to enable multi-page entries
- iterate through all Tables
- look for "Service Authorization" in cell contents
    - if found, extract Service Authorization number
- Look for "Date of Service" in cell contents,
    - if found, extract full table

    table_content string samples:
    "Child's Name: Arabella Gavela Date of Birth: 2 / 10 / 2022 Child's EI#: 872959 Service Type: SI-ABA Service Authorization (one SA per page)#: 12510932"
    "Service Type: Special Instruction Service Authorization (one SA per page)#: 12510932 Interventionist Name: Maria Campo Discipline: SLABA NPI #: 18415520234 Provider Agency Name:"
    "Service Type: Special Instruction Service Authorization (one SA per page)#: 12510933 Interventionist Name: Maria Campo Discipline: SI-ABA NPI #: 18415520234 Provider Agency Name:"
    "Service Type: SI-ABA Service Authorization (one SA per page)#: 12510932 Interventionist Name: Maria Campo Discipline: Special Instruction NPI #: 1841552023 Provider Agency Name:"
    "null"
    "Child's Name: Arabella Gavela Date of Birth: 2 / 10 /2022 Child's EI#: 872959 Service Type: Special Instruction Service Authorization (one SA per page)#: 12510933 Interventionist Name: Maria Campo Discipline: SI-ABA NPI #: 18415520234"
    "Service Type: Special Instruction Service Authorization (one SA per page)#: 12510932 Interventionist Name: Maria Campo Discipline: SI-ABA NPI #: 18415520234 Provider Agency Name:"
    "Child's Name: Arabella Gavela Date of Birth: 2 / 10 / 2022 Child's EI#: 872959 Service Type: SI-ABA Service Authorization (one SA per page)#: 12510932"
    "Child's Name: Arabella Gavela Date of Birth: 2 / 10 / 2022 Child's EI#: 872959 Service Type: SI-ABA Service Authorization (one SA per page)#: 12510933"

    Look at json to html